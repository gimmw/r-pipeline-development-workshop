version: "3.9"

services:

  postgres:
    image: postgres:15.3-bullseye
    restart: always
    stop_grace_period: 10s
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_DB: rpipelines
      POSTGRES_USER: user
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data

  minio:
    image: minio/minio:RELEASE.2023-05-27T05-56-19Z
    restart: always
    stop_grace_period: 10s
    working_dir: /data
    volumes:
      - minio-data:/data
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ACCESS_KEY: user
      MINIO_SECRET_KEY: password
      MINIO_ROOT_USER: user
      MINIO_ROOT_PASSWORD: password
      MINIO_STORAGE_USE_HTTPS: False
      MINIO_PROMETHEUS_AUTH_TYPE: public
    command: server --console-address :9001 --address :9000 /data

  mc:
    image: minio/mc:RELEASE.2023-05-30T22-41-38Z
    environment:
      MINIO_PORT: 9000
      MINIO_ACCESS_KEY: user
      MINIO_SECRET_KEY: password
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c ' sleep 5;
      /usr/bin/mc config host add s3 http://minio:9000 user password --api S3v4;
      [[ ! -z "`/usr/bin/mc ls s3 | grep challenge`" ]] || /usr/bin/mc mb s3/mlflow;  /usr/bin/mc policy download s3/mlflow;
      [[ ! -z "`/usr/bin/mc ls s3 | grep challenge`" ]] || /usr/bin/mc mb s3/data;  /usr/bin/mc policy download s3/data; exit 0; '

  superset:
    image: ghcr.io/plant-food-research-open/superset-dev:${APP_VERSION:-latest}
    build:
      context: .
      dockerfile: ./dockerfiles/superset/Dockerfile
      args:
        BUILD_DATE: date -u +'%Y-%m-%dT%H:%M:%SZ'
        APP_VERSION: ${APP_VERSION:-latest}
      tags:
        - ghcr.io/plant-food-research-open/superset-dev:latest
    environment:
      ADMIN_USERNAME: user
      ADMIN_EMAIL: $ADMIN_EMAIL
      ADMIN_PASSWORD: password
    ports:
      - 8088:8088
    volumes:
      - superset-data:/app/superset_home
      
  shiny:
    image: ghcr.io/plant-food-research-open/shiny-rpipelines:${APP_VERSION:-latest}
    build:
      context: .
      dockerfile: ./dockerfiles/shiny/Dockerfile.${APP_VERSION}
      args:
        BUILD_DATE: date -u +'%Y-%m-%dT%H:%M:%SZ'
        APP_VERSION: ${APP_VERSION:-latest}
      tags:
        - ghcr.io/plant-food-research-open/shiny-rpipelines:latest
    restart: always
    stop_grace_period: 10s
    ports:
      - 3838:3838

  rstudio:
    image: ghcr.io/plant-food-research-open/rstudio-rpipelines:${APP_VERSION:-latest}
    build:
      context: .
      dockerfile: ./dockerfiles/rstudio/Dockerfile.${APP_VERSION}
      args:
        BUILD_DATE: date -u +'%Y-%m-%dT%H:%M:%SZ'
        APP_VERSION: ${APP_VERSION:-latest}
      tags:
        - ghcr.io/plant-food-research-open/rstudio-rpipelines:latest
    restart: always
    stop_grace_period: 10s
    ports:
      - 8787:8787

  mlflow:
    image: ghcr.io/plant-food-research-open/mlflow-rpipelines:${APP_VERSION:-latest}
    build:
      context: .
      dockerfile: ./dockerfiles/mlflow/Dockerfile.${APP_VERSION}
      args:
        BUILD_DATE: date -u +'%Y-%m-%dT%H:%M:%SZ'
        APP_VERSION: ${APP_VERSION:-latest}
      tags:
        - ghcr.io/plant-food-research-open/mlflow-rpipelines:latest
    restart: always
    stop_grace_period: 10s
    environment:
      MLFLOW_BACKEND_STORE_URI: postgresql://user:password@postgres:5432/rpipelines
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      AWS_ACCESS_KEY_ID: user
      AWS_SECRET_ACCESS_KEY: password
    ports:
      - 5000:5000
    command: >
      mlflow server --serve-artifacts --host 0.0.0.0 --port 5000
      --backend-store-uri "postgresql://user:password@postgres:5432/rpipelines" --default-artifact-root s3://mlflow/
      --expose-prometheus /prometheus

networks:
  default:
    name: $PROJECT_NAME
    driver: bridge

volumes:
  postgres-data: {}
  minio-data: {}
  superset-data: {}
